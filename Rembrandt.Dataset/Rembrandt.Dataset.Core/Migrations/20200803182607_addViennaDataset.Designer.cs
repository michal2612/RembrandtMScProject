// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rembrandt.Dataset.Core.Context;

namespace Rembrandt.Dataset.Core.Migrations
{
    [DbContext(typeof(ObservationContext))]
    [Migration("20200803182607_addViennaDataset")]
    partial class addViennaDataset
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Rembrandt.Dataset.Core.Models.Activities", b =>
                {
                    b.Property<int>("ActivitiesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Biking")
                        .HasColumnType("bit");

                    b.Property<bool?>("Jogging")
                        .HasColumnType("bit");

                    b.Property<bool?>("Relaxing")
                        .HasColumnType("bit");

                    b.Property<bool?>("Socialising")
                        .HasColumnType("bit");

                    b.Property<bool?>("Walking")
                        .HasColumnType("bit");

                    b.HasKey("ActivitiesId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("Rembrandt.Dataset.Core.Models.Attributes", b =>
                {
                    b.Property<int>("AttributesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Beauty")
                        .HasColumnType("int");

                    b.Property<int>("Benches")
                        .HasColumnType("int");

                    b.Property<int>("Biodiversity")
                        .HasColumnType("int");

                    b.Property<int>("Crowded")
                        .HasColumnType("int");

                    b.Property<int>("Facilities")
                        .HasColumnType("int");

                    b.Property<int>("Flowers")
                        .HasColumnType("int");

                    b.Property<int>("Garbage")
                        .HasColumnType("int");

                    b.Property<int>("Lawns")
                        .HasColumnType("int");

                    b.Property<int>("Lively")
                        .HasColumnType("int");

                    b.Property<int>("Natveg")
                        .HasColumnType("int");

                    b.Property<int>("Noisy")
                        .HasColumnType("int");

                    b.Property<int>("Paths")
                        .HasColumnType("int");

                    b.Property<int>("Play")
                        .HasColumnType("int");

                    b.Property<int>("Relaxing")
                        .HasColumnType("int");

                    b.Property<int>("Safe")
                        .HasColumnType("int");

                    b.Property<int>("Shrubs")
                        .HasColumnType("int");

                    b.Property<int>("Sports")
                        .HasColumnType("int");

                    b.Property<int>("Tranquil")
                        .HasColumnType("int");

                    b.Property<int>("Trees")
                        .HasColumnType("int");

                    b.Property<int>("Veget")
                        .HasColumnType("int");

                    b.HasKey("AttributesId");

                    b.ToTable("Attributes");
                });

            modelBuilder.Entity("Rembrandt.Dataset.Core.Models.Contributor", b =>
                {
                    b.Property<int>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<bool?>("DutchNationality")
                        .HasColumnType("bit");

                    b.Property<int?>("Education")
                        .HasColumnType("int");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("MoreInvolved")
                        .HasColumnType("bit");

                    b.Property<int?>("NatureOriented")
                        .HasColumnType("int");

                    b.Property<bool?>("VisitAlone")
                        .HasColumnType("bit");

                    b.Property<bool?>("VisitDaily")
                        .HasColumnType("bit");

                    b.Property<int?>("VisitFreq")
                        .HasColumnType("int");

                    b.Property<int?>("VisitOtherParks")
                        .HasColumnType("int");

                    b.Property<bool?>("WithChildren")
                        .HasColumnType("bit");

                    b.HasKey("PrimaryKey");

                    b.ToTable("Contributor");
                });

            modelBuilder.Entity("Rembrandt.Dataset.Core.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GpsAccuracy")
                        .HasColumnType("int");

                    b.Property<float>("Latitude")
                        .HasColumnType("real");

                    b.Property<float>("Longitude")
                        .HasColumnType("real");

                    b.HasKey("LocationId");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("Rembrandt.Dataset.Core.Models.Observation", b =>
                {
                    b.Property<int>("ObservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActivitiesId")
                        .HasColumnType("int");

                    b.Property<int?>("AttributesId")
                        .HasColumnType("int");

                    b.Property<int?>("ContributorPrimaryKey")
                        .HasColumnType("int");

                    b.Property<int?>("ParkId")
                        .HasColumnType("int");

                    b.Property<string>("PhotoAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhotoTowardsPointCompass")
                        .HasColumnType("int");

                    b.Property<int>("SiteId")
                        .HasColumnType("int");

                    b.Property<string>("SkipReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeSubmitted")
                        .HasColumnType("datetime2");

                    b.HasKey("ObservationId");

                    b.HasIndex("ActivitiesId");

                    b.HasIndex("AttributesId");

                    b.HasIndex("ContributorPrimaryKey");

                    b.HasIndex("ParkId");

                    b.ToTable("Observations");
                });

            modelBuilder.Entity("Rembrandt.Dataset.Core.Models.Park", b =>
                {
                    b.Property<int>("ParkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActualLocationLocationId")
                        .HasColumnType("int");

                    b.Property<int?>("MeasuredLocationLocationId")
                        .HasColumnType("int");

                    b.HasKey("ParkId");

                    b.HasIndex("ActualLocationLocationId");

                    b.HasIndex("MeasuredLocationLocationId");

                    b.ToTable("Park");
                });

            modelBuilder.Entity("Rembrandt.Dataset.Core.Models.ViennaDataset.ViennaAttributes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnimalsNature")
                        .HasColumnType("int");

                    b.Property<int?>("Attractive")
                        .HasColumnType("int");

                    b.Property<int?>("Clean")
                        .HasColumnType("int");

                    b.Property<bool?>("CoolingGreen")
                        .HasColumnType("bit");

                    b.Property<bool?>("CoolingWind")
                        .HasColumnType("bit");

                    b.Property<int?>("Creativity")
                        .HasColumnType("int");

                    b.Property<bool?>("DrikingWater")
                        .HasColumnType("bit");

                    b.Property<int?>("ExerciseSport")
                        .HasColumnType("int");

                    b.Property<int?>("Facilities")
                        .HasColumnType("int");

                    b.Property<int?>("FeelingWell")
                        .HasColumnType("int");

                    b.Property<int?>("Playing")
                        .HasColumnType("int");

                    b.Property<int?>("Quiet")
                        .HasColumnType("int");

                    b.Property<int?>("Romance")
                        .HasColumnType("int");

                    b.Property<int?>("Secure")
                        .HasColumnType("int");

                    b.Property<bool?>("Shadow")
                        .HasColumnType("bit");

                    b.Property<int?>("SittingLayingDown")
                        .HasColumnType("int");

                    b.Property<int?>("Summer")
                        .HasColumnType("int");

                    b.Property<bool?>("Water")
                        .HasColumnType("bit");

                    b.Property<int?>("Winter")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ViennaAttributes");
                });

            modelBuilder.Entity("Rembrandt.Dataset.Core.Models.ViennaDataset.ViennaObservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttributesId")
                        .HasColumnType("int");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("PhotoEastUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoNorthUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPointUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoSouthUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoWestUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubAttributesId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeSubmitted")
                        .HasColumnType("datetime2");

                    b.Property<string>("User")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AttributesId");

                    b.HasIndex("LocationId");

                    b.HasIndex("SubAttributesId");

                    b.ToTable("ViennaObservations");
                });

            modelBuilder.Entity("Rembrandt.Dataset.Core.Models.ViennaDataset.ViennaSubAttributes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AlpineSkiing")
                        .HasColumnType("bit");

                    b.Property<bool?>("Alternativ")
                        .HasColumnType("bit");

                    b.Property<bool?>("AnimalBirdObservation")
                        .HasColumnType("bit");

                    b.Property<bool?>("ApparatusGymnastics")
                        .HasColumnType("bit");

                    b.Property<bool?>("Ballgames")
                        .HasColumnType("bit");

                    b.Property<bool?>("BallgamesThrowingBalls")
                        .HasColumnType("bit");

                    b.Property<bool?>("BathingSwimming")
                        .HasColumnType("bit");

                    b.Property<bool?>("BoardGames")
                        .HasColumnType("bit");

                    b.Property<bool?>("Breastfeed")
                        .HasColumnType("bit");

                    b.Property<bool?>("ClimbingBouldering")
                        .HasColumnType("bit");

                    b.Property<bool?>("ConsumptionNecessary")
                        .HasColumnType("bit");

                    b.Property<bool?>("Cycling")
                        .HasColumnType("bit");

                    b.Property<bool?>("Dancing")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnjoyingNature")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnjoyingTheSun")
                        .HasColumnType("bit");

                    b.Property<bool?>("FeedingPettingAnimals")
                        .HasColumnType("bit");

                    b.Property<bool?>("GoingForAWalk")
                        .HasColumnType("bit");

                    b.Property<bool?>("Hiking")
                        .HasColumnType("bit");

                    b.Property<bool?>("HoresebackRiding")
                        .HasColumnType("bit");

                    b.Property<bool?>("Iceskating")
                        .HasColumnType("bit");

                    b.Property<bool?>("Jogging")
                        .HasColumnType("bit");

                    b.Property<bool?>("JuggingHulaHoop")
                        .HasColumnType("bit");

                    b.Property<bool?>("LayingDownProtected")
                        .HasColumnType("bit");

                    b.Property<bool?>("LettingTheDogSwim")
                        .HasColumnType("bit");

                    b.Property<bool?>("NordicSkiing")
                        .HasColumnType("bit");

                    b.Property<bool?>("NordicWalking")
                        .HasColumnType("bit");

                    b.Property<bool?>("ObservingTrainspotting")
                        .HasColumnType("bit");

                    b.Property<bool?>("Paddleboar")
                        .HasColumnType("bit");

                    b.Property<bool?>("PaintingDrawing")
                        .HasColumnType("bit");

                    b.Property<bool?>("Parcouring")
                        .HasColumnType("bit");

                    b.Property<bool?>("Picknick")
                        .HasColumnType("bit");

                    b.Property<bool?>("Playing")
                        .HasColumnType("bit");

                    b.Property<bool?>("PlayingAnInstrument")
                        .HasColumnType("bit");

                    b.Property<bool?>("PlayingInTheSnow")
                        .HasColumnType("bit");

                    b.Property<bool?>("PlayingWithSand")
                        .HasColumnType("bit");

                    b.Property<bool?>("PlayingWithWater")
                        .HasColumnType("bit");

                    b.Property<bool?>("Proposing")
                        .HasColumnType("bit");

                    b.Property<bool?>("RidingABoat")
                        .HasColumnType("bit");

                    b.Property<bool?>("RidingAScooter")
                        .HasColumnType("bit");

                    b.Property<bool?>("Romance")
                        .HasColumnType("bit");

                    b.Property<bool?>("Selfie")
                        .HasColumnType("bit");

                    b.Property<bool?>("SittingOnTheGround")
                        .HasColumnType("bit");

                    b.Property<bool?>("Skating")
                        .HasColumnType("bit");

                    b.Property<bool?>("Slacklinin")
                        .HasColumnType("bit");

                    b.Property<bool?>("Snowshoein")
                        .HasColumnType("bit");

                    b.Property<bool?>("Spraying")
                        .HasColumnType("bit");

                    b.Property<bool?>("StarObservation")
                        .HasColumnType("bit");

                    b.Property<bool?>("TableTennis")
                        .HasColumnType("bit");

                    b.Property<bool?>("TakingPictures")
                        .HasColumnType("bit");

                    b.Property<bool?>("TakingTheDogForAWalk")
                        .HasColumnType("bit");

                    b.Property<bool?>("TakingTheDogOffTheLeash")
                        .HasColumnType("bit");

                    b.Property<bool?>("ThrowingFrisbee")
                        .HasColumnType("bit");

                    b.Property<bool?>("ThrowingObjects")
                        .HasColumnType("bit");

                    b.Property<bool?>("Tobogganing")
                        .HasColumnType("bit");

                    b.Property<bool?>("UrbanGardening")
                        .HasColumnType("bit");

                    b.Property<bool?>("WorkingStudying")
                        .HasColumnType("bit");

                    b.Property<bool?>("Yoga")
                        .HasColumnType("bit");

                    b.Property<bool?>("Youth")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ViennaSubAttributes");
                });

            modelBuilder.Entity("Rembrandt.Dataset.Core.Models.Observation", b =>
                {
                    b.HasOne("Rembrandt.Dataset.Core.Models.Activities", "Activities")
                        .WithMany()
                        .HasForeignKey("ActivitiesId");

                    b.HasOne("Rembrandt.Dataset.Core.Models.Attributes", "Attributes")
                        .WithMany()
                        .HasForeignKey("AttributesId");

                    b.HasOne("Rembrandt.Dataset.Core.Models.Contributor", "Contributor")
                        .WithMany()
                        .HasForeignKey("ContributorPrimaryKey");

                    b.HasOne("Rembrandt.Dataset.Core.Models.Park", "Park")
                        .WithMany()
                        .HasForeignKey("ParkId");
                });

            modelBuilder.Entity("Rembrandt.Dataset.Core.Models.Park", b =>
                {
                    b.HasOne("Rembrandt.Dataset.Core.Models.Location", "ActualLocation")
                        .WithMany()
                        .HasForeignKey("ActualLocationLocationId");

                    b.HasOne("Rembrandt.Dataset.Core.Models.Location", "MeasuredLocation")
                        .WithMany()
                        .HasForeignKey("MeasuredLocationLocationId");
                });

            modelBuilder.Entity("Rembrandt.Dataset.Core.Models.ViennaDataset.ViennaObservation", b =>
                {
                    b.HasOne("Rembrandt.Dataset.Core.Models.ViennaDataset.ViennaAttributes", "Attributes")
                        .WithMany()
                        .HasForeignKey("AttributesId");

                    b.HasOne("Rembrandt.Dataset.Core.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.HasOne("Rembrandt.Dataset.Core.Models.ViennaDataset.ViennaSubAttributes", "SubAttributes")
                        .WithMany()
                        .HasForeignKey("SubAttributesId");
                });
#pragma warning restore 612, 618
        }
    }
}
