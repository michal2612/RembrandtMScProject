@model Rembrandt.Web.ViewModels.ViennaDatasetViewModel
@{
    ViewData["Title"] = "Data";
}
<div>
    <div id="map">
    </div>
    <br />
    <div id="attributes">
        <select class="browser-default custom-select" id="main-category">
            <option value="null">Select main category (optional)</option>
            @{
                foreach(var attributeName in Model.AttributesNames)
                {
                    <option value="@attributeName.Key">@attributeName.Value</option>
                }
            }
        </select>
    </div>
    <h2>
        Select your suitable activities
    </h2>
    <div class="subattributes-div">
        <div class="form-group">
            <select class="mul-select" multiple="true" id="sub-categories">
                @foreach(var subattribute in Model.SubAttributesNames)
                {
                    <option value="@subattribute.Key">@subattribute.Value</option>
                }
            </select>
        </div> 
        <button type="button" class="btn btn-primary" onclick="submit()">Find suitable locations!</button>
    </div>
    <h2>
        Observations list
    </h2>
    <div id="vienna-table-main-div">
        <table class="table table-striped table-hover vienna-table" id="vienna-table">
            <tr>
                <th>No.</th>
                <th>Time Submitted</th>
                <th>Attributes</th>
                <th>Subattributes</th>
            </tr>
        </table>
    </div>
</div>
@section scripts {
    <script>
        function initMap() {
            map = new google.maps.Map(document.getElementById('map'), {
                center: {lat: 48.2086649, lng: 16.3666573},
                zoom: 13,
                mapTypeId: "terrain"
            });

        var marker = new google.maps.Marker({
            position: {lat: 48.2086649, lng: 16.3666573},
            map: map,
            animation: google.maps.Animation.DROP,
            title: 'Hello World!'
        });
    }
    </script>
    <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDgpHpnK2Fgy1xVldrfRrcZHds8Yrr-Kik&callback=initMap&libraries=&v=weekly">
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.0/js/select2.min.js"></script>

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css">
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js"></script>\    <script>
        $(document).ready(function(){
            $(".mul-select").select2({
                    placeholder: "Select activities in areas", //placeholder
                    tags: true,
                    tokenSeparators: ['/',',',';'," "] 
                });
            })

        function submit() {
            setMapOnAll(null);
            var viennaSelect = new Object();

            //main category
            var main = document.getElementById('main-category').value;
            viennaSelect['MainCategory'] = CheckForNull(main);

            //sub categories
            var subcategories = document.getElementById('sub-categories');
            let selected = [];
            for(var i = 0; i < subcategories.length; i++) {
                if(subcategories[i].selected) selected.push(subcategories.options[i].value);
            }
            viennaSelect['RequestedActivities'] = CheckForNull(selected);
            $.post('@Url.Action("Submit","Vienna")', viennaSelect).done(function(response){
                if(response != null) {
                    var jsonResponse = JSON.parse(response);
                    document.getElementById('vienna-table').style.visibility = "visible";
                    $("#rembrandt").html(response);

                    for(i = 0; i < jsonResponse.length; i++) {
                        AddMarker(jsonResponse[i].location.latitude, jsonResponse[i].location.longitude);

                        var table = document.getElementById('vienna-table');
                        var row = table.insertRow(i + 1);
                        var cell1 = row.insertCell(0);
                        var cell2 = row.insertCell(1);
                        var cell3 = row.insertCell(2);
                        var cell4 = row.insertCell(3);


                        cell1.innerHTML = i + 1;
                        cell2.innerHTML = jsonResponse[i].timeSubmitted;

                        var attributesValues = [];

                        for(const [key, value] of Object.entries(jsonResponse[i].attributes)) {
                            if(Number.isInteger(value)) {
                                if(value >= 50) attributesValues.push(key);
                            }
                            if(value == true) attributesValues.push(key);
                        }
                        cell3.innerHTML = attributesValues.join(', ');
                        
                        var subAttributesValues = [];

                        for(const [key, value] of Object.entries(jsonResponse[i].subAttributes)) {
                            if(value == true) subAttributesValues.push(key);
                        }
                        cell4.innerHTML = subAttributesValues.join(', ');
                    };

                }

            });
        }


        function AddMarker(lat, lng) {
            var marker = new google.maps.Marker({
            position: {lat: lat, lng: lng},
            map: map,
            animation: google.maps.Animation.DROP,
            });
        }

        function CheckForNull(value) {
            return value == 'null' ? null : value;
        }

        function setMapOnAll(map) {
            var markers = [];
            for (let i = 0; i < markers.length; i++) {
                markers[i].setMap(map);
            }
        }
    </script>
}